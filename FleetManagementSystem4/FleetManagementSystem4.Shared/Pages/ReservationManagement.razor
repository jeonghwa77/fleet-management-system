@page "/reservations"
@using FleetManagementSystem4.Shared.Models
@using FleetManagementSystem4.Shared.Components

<div class="min-h-screen bg-background">
    <!-- 헤더 -->
    <div class="bg-card border-b border-border sticky top-0 z-10">
        <div class="container mx-auto px-4 py-4">
            <div class="flex items-center justify-between">
                <div class="flex items-center space-x-3">
                    <div class="w-10 h-10 bg-primary/10 rounded-lg flex items-center justify-center">
                        <span class="text-xl">📅</span>
                    </div>
                    <div>
                        <h1 class="text-xl font-semibold text-foreground">예약 관리</h1>
                        <p class="text-sm text-muted-foreground">차량 예약 현황 및 관리</p>
                    </div>
                </div>
                <div class="hidden md:flex items-center space-x-3">
                    <div class="bg-muted/50 px-3 py-1 rounded-lg text-sm text-muted-foreground">
                        총 @Reservations.Count 개 예약
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- 필터 및 검색 -->
    <div class="bg-white rounded-lg shadow-sm border border-border p-4">
        <div class="flex flex-wrap items-center gap-4">
            <div class="flex-1 min-w-[200px]">
                <input type="text" placeholder="예약자명 또는 차량명으로 검색..." 
                       class="w-full px-3 py-2 border border-input rounded-lg focus:outline-none focus:ring-2 focus:ring-ring" />
            </div>
            <div class="flex items-center space-x-2">
                <label class="text-sm font-medium text-foreground">상태:</label>
                <select @bind="StatusFilter" 
                        class="px-3 py-2 border border-input rounded-lg focus:outline-none focus:ring-2 focus:ring-ring">
                    <option value="all">전체 상태</option>
                    <option value="approved">예약 중</option>
                    <option value="completed">완료됨</option>
                    <option value="cancelled">취소됨</option>
                </select>
            </div>
        </div>
    </div>

    <!-- 예약 카드 리스트 -->
    <div class="space-y-4">
        @foreach (var reservation in FilteredReservations)
        {
            <div class="bg-white rounded-lg shadow-sm border border-border overflow-hidden hover:shadow-md transition-shadow">
                <div class="p-4 md:p-6">
                    <div class="flex items-start justify-between mb-4">
                        <div class="flex items-center space-x-4">
                            <div class="w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center">
                                <span class="text-xl">🚗</span>
                            </div>
                            <div>
                                <h3 class="font-semibold text-foreground text-lg">@reservation.Vehicle</h3>
                                <div class="flex items-center space-x-4 text-sm text-muted-foreground">
                                    <span>👤 @reservation.EmployeeName</span>
                                    <span>🏢 @reservation.Department</span>
                                </div>
                            </div>
                        </div>
                        <span class="@GetStatusClass(reservation.Status) px-3 py-1 rounded-full text-sm font-medium">
                            @GetStatusText(reservation.Status)
                        </span>
                    </div>
                    
                    <div class="flex items-center justify-between">
                        <div class="flex items-center space-x-6 text-sm">
                            <div class="flex items-center space-x-2">
                                <span class="text-muted-foreground">📅 기간:</span>
                                <span class="font-medium text-foreground">@reservation.StartDate ~ @reservation.EndDate</span>
                            </div>
                        </div>
                        
                        <div class="flex items-center space-x-2">
                            <button class="bg-secondary hover:bg-secondary/80 text-secondary-foreground px-3 py-1.5 rounded-md text-sm font-medium transition-colors">
                                상세보기
                            </button>
                            
                            @if (reservation.Status == "approved")
                            {
                                <button class="bg-green-600 hover:bg-green-700 text-white px-3 py-1.5 rounded-md text-sm font-medium transition-colors">
                                    완료
                                </button>
                                <button class="bg-yellow-600 hover:bg-yellow-700 text-white px-3 py-1.5 rounded-md text-sm font-medium transition-colors">
                                    취소
                                </button>
                            }
                            
                            <button class="border border-destructive text-destructive hover:bg-destructive hover:text-destructive-foreground px-3 py-1.5 rounded-md text-sm font-medium transition-colors">
                                삭제
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- 빈 상태 -->
    @if (!FilteredReservations.Any())
    {
        <div class="text-center py-12">
            <div class="text-4xl mb-4">📋</div>
            <h3 class="text-lg font-medium text-foreground mb-2">예약이 없습니다</h3>
            <p class="text-muted-foreground mb-4">
                @(StatusFilter == "all" ? "아직 등록된 예약이 없습니다" : $"'{GetStatusText(StatusFilter)}' 상태의 예약이 없습니다")
            </p>
            @if (StatusFilter != "all")
            {
                <button @onclick="ResetFilter" 
                        class="bg-primary hover:bg-primary/90 text-primary-foreground px-4 py-2 rounded-lg transition-colors font-medium">
                    전체 예약 보기
                </button>
            }
        </div>
    }

    <!-- 통계 요약 -->
    <div class="grid gap-4 md:grid-cols-4">
        <div class="bg-white rounded-lg shadow-sm border border-border p-4 text-center">
            <div class="text-2xl font-bold text-foreground">@Reservations.Count(r => r.Status == "approved")</div>
            <div class="text-sm text-muted-foreground">예약 중</div>
        </div>
        <div class="bg-white rounded-lg shadow-sm border border-border p-4 text-center">
            <div class="text-2xl font-bold text-foreground">@Reservations.Count(r => r.Status == "completed")</div>
            <div class="text-sm text-muted-foreground">완료됨</div>
        </div>
        <div class="bg-white rounded-lg shadow-sm border border-border p-4 text-center">
            <div class="text-2xl font-bold text-foreground">@Reservations.Count(r => r.Status == "cancelled")</div>
            <div class="text-sm text-muted-foreground">취소됨</div>
        </div>
        <div class="bg-white rounded-lg shadow-sm border border-border p-4 text-center">
            <div class="text-2xl font-bold text-foreground">@Reservations.Count()</div>
            <div class="text-sm text-muted-foreground">전체</div>
        </div>
    </div>
</div>

@code {
	// TODO: 실제 데이터 연동
	public class Reservation
	{
		public string Vehicle { get; set; } = "";
		public string EmployeeName { get; set; } = "";
		public string Department { get; set; } = "";
		public string StartDate { get; set; } = "";
		public string EndDate { get; set; } = "";
		public string Status { get; set; } = "";
	}

	private string StatusFilter { get; set; } = "all";
	private List<Reservation> Reservations { get; set; } = new()
	{
		new Reservation { Vehicle = "그랜저", EmployeeName = "김민수", Department = "프로젝트 1팀", StartDate = "2025-08-12", EndDate = "2025-08-12", Status = "approved" },
		new Reservation { Vehicle = "싼타페", EmployeeName = "이영희", Department = "연구개발팀", StartDate = "2025-08-13", EndDate = "2025-08-13", Status = "completed" },
		new Reservation { Vehicle = "스타렉스", EmployeeName = "관리자", Department = "경영지원팀", StartDate = "2025-08-14", EndDate = "2025-08-14", Status = "cancelled" }
	};

	private IEnumerable<Reservation> FilteredReservations =>
		StatusFilter == "all" ? Reservations : Reservations.Where(r => r.Status == StatusFilter);

	private string GetStatusClass(string status)
	{
		return status switch
		{
			"approved" => "bg-blue-100 text-blue-700",
			"completed" => "bg-green-100 text-green-700",
			"cancelled" => "bg-red-100 text-red-700",
			_ => "bg-gray-100 text-gray-700"
		};
	}

	private string GetStatusText(string status)
	{
		return status switch
		{
			"approved" => "예약 중",
			"completed" => "완료됨",
			"cancelled" => "취소됨",
			"all" => "전체",
			_ => status
		};
	}

	private void ResetFilter()
	{
		StatusFilter = "all";
	}
}
